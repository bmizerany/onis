#!/usr/bin/env ruby
$LOAD_PATH.unshift File.dirname(__FILE__) + "/../lib"

require 'optparse'
require 'onis/base'

# default options
pid     = nil
force   = false
watch   = false
color   = false

# setup command
command = `uname`.chomp == "Darwin" ? "command" : "cmd"
psax    = `ps axo pid,#{command}`
format  = "%-10s %s\n"

ARGV.options do |o|
  o.banner = "Usage: onis [options] [pid]"
  o.separator ""
  o.separator "Run without params for process list"

  o.on("-f", "--force", "force report") { force = true }
  o.on("-w", "--watch", "watch report. -f is implied") { watch = true }
  o.on("-c", "--color", "highlight every other line in report") { color = true }

  o.on_tail("-h", "--help", "show this message") { abort(o.to_s) }
  o.parse!
end

P = lambda {|line|
  @n ||= 0
  print "\e[7m" if color && ((@n += 1) % 2).zero?
  puts line
  print "\e[m" if color
}

if pid = ARGV.shift
  if watch
    exec "watch -n0 \"#{$0} -f #{pid}\""
  elsif force
    Process.kill("SIGUSR1", pid.to_i)
    sleep(0.5)
  end

  pfp = Onis::Base.path_for_pid(pid)
  abort("report for #{pid} not found") if !File.file?(pfp)

  open(pfp) do |f|
      format = "%-45s %-10s\n"
      puts format % %w|Class Count|
      puts "-" * 56
      f.each_line do |line|
        P[format % line.chomp.split(",")]
      end
  end
else
  print format % %w|PID COMMAND|
  puts  "-" * 60 
  psax.each_line do |line|
    next unless line =~ /\d+ /
    pid = line.strip!.slice!(/\d+ /).strip
    next if pid == Process.pid.to_s
    pfp = Onis::Base.path_for_pid(pid)
    next if !File.file?(pfp)
    P[format % [pid, line]]
  end
end

#vim: syn=ruby
